/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"], input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */ }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

html {
  box-sizing: border-box; }

*,
*:after,
*:before {
  box-sizing: inherit; }

/*$background-color: rgb(231, 231, 226);*/
/**
 * Set up a decent box model on the root element
 */
html {
  box-sizing: border-box; }

/**
 * Make all elements from the DOM inherit from the parent box-sizing
 * Since `*` has a specificity of 0, it does not override the `html` value
 * making all elements inheriting from the root box-sizing value
 * See: https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/
 */
*, *:before, *:after {
  box-sizing: inherit; }

/**
 * Basic styles for links
 */
a {
  color: #E50050;
  text-decoration: none; }
  a:hover,
  a:active,
  a:focus {
    color: #222;
    text-decoration: underline; }

html {
  color: #222;
  font-size: 1em;
  line-height: 1.4; }

::-moz-selection {
  background: #b3d4fc;
  text-shadow: none; }

::selection {
  background: #b3d4fc;
  text-shadow: none; }

hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #ccc;
  margin: 1em 0;
  padding: 0; }

audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle; }

fieldset {
  border: 0;
  margin: 0;
  padding: 0; }

textarea {
  resize: vertical; }

@font-face {
  font-family: Beaver;
  src: url("fonts/beaver.ttf"); }

/**
 * Basic typography style for copy text
 */
body {
  color: #222;
  font: normal 125%/1.4 "Open Sans", "Helvetica Neue Light", "Helvetica Neue", "Helvetica", "Arial", sans-serif; }

/**
 * Clear inner floats
 */
.clearfix:after {
  clear: both;
  content: '';
  display: table; }

.clearfix:before,
.clearfix:after {
  content: " ";
  display: table; }

.clearfix:after {
  clear: both; }

.clearfix {
  *zoom: 1; }

/**
 * Main content containers
 * 1. Make the container full-width with a maximum width
 * 2. Center it in the viewport
 * 3. Leave some space on the edges, especially valuable on small screens
 */
.container {
  max-width: 960px;
  /* 1 */
  margin-left: auto;
  /* 2 */
  margin-right: auto;
  /* 2 */
  padding-left: 20px;
  /* 3 */
  padding-right: 20px;
  /* 3 */
  width: 100%;
  /* 1 */ }

/**
 * Hide text while making it readable for screen readers
 * 1. Needed in WebKit-based browsers because of an implementation bug;
 *    See: https://code.google.com/p/chromium/issues/detail?id=457146
 */
.hide-text {
  overflow: hidden;
  padding: 0;
  /* 1 */
  text-indent: 101%;
  white-space: nowrap; }

/**
 * Hide element while making it readable for screen readers
 * Shamelessly borrowed from HTML5Boilerplate:
 * https://github.com/h5bp/html5-boilerplate/blob/master/src/css/main.css#L119-L133
 */
.visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px; }

.hidden {
  display: none !important;
  visibility: hidden; }

.visuallyhidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px; }

.visuallyhidden.focusable:active,
.visuallyhidden.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  width: auto; }

.invisible {
  visibility: hidden; }

@media print {
  *,
  *:before,
  *:after {
    background: transparent !important;
    color: #000 !important;
    box-shadow: none !important;
    text-shadow: none !important; }
  a,
  a:visited {
    text-decoration: underline; }
  a[href]:after {
    content: " (" attr(href) ")"; }
  abbr[title]:after {
    content: " (" attr(title) ")"; }
  a[href^="#"]:after,
  a[href^="javascript:"]:after {
    content: ""; }
  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid; }
  thead {
    display: table-header-group; }
  tr,
  img {
    page-break-inside: avoid; }
  img {
    max-width: 100% !important; }
  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3; }
  h2,
  h3 {
    page-break-after: avoid; } }

#header-container {
  max-width: 960px;
  margin-left: auto;
  margin-right: auto; }
  #header-container:after {
    clear: both;
    content: "";
    display: table; }

#logo-container {
  background-color: #FFFFFF;
  width: auto;
  height: auto;
  /*position: absolute; left: 20px; top: 0px;*/
  font-family: Beaver;
  opacity: 0.9;
  float: left;
  display: block;
  margin-right: 2.35765%;
  width: 23.23176%; }
  #logo-container img {
    margin: 0;
    padding: 0; }
  #logo-container h1 {
    font-size: 32.4px;
    padding: 0;
    margin: 0 0px; }
  #logo-container p {
    padding: 0;
    margin: 0 2px; }
  #logo-container:last-child {
    margin-right: 0; }

#header-banner {
  background: url(img/kashana.png);
  height: 270px; }

body footer {
  background: linear-gradient(to bottom, #181818 0%, #343434 100%);
  /* W3C */
  color: white;
  padding: 20px 0;
  text-align: center; }

.outer-nav-container {
  border-top: 1px solid #676060;
  border-bottom: 1px solid #231E1E; }

.inner-nav-container {
  border-left: 1px solid #676060;
  border-right: 1px solid #231E1E;
  max-width: 960px;
  margin-left: auto;
  margin-right: auto; }
  .inner-nav-container:after {
    clear: both;
    content: "";
    display: table; }

header nav {
  width: 100%;
  display: inline-block; }
  header nav a {
    display: block;
    font-weight: bold; }
    header nav a:hover {
      text-decoration: underline; }
  header nav ul {
    list-style-type: none;
    display: inline-block;
    margin: 0;
    padding: 0; }
  header nav li {
    float: left;
    padding: 0.3em 0.6em;
    font-family: arial;
    font-weight: bold;
    font-size: 1.1em; }
    header nav li:first-child {
      border-left: none; }
    header nav li:last-child {
      border-right: none; }

footer nav {
  display: inline-block; }
  footer nav a {
    color: white; }
    footer nav a:hover {
      text-decoration: underline; }
    footer nav a:hover, footer nav a:visited {
      color: white; }
  footer nav ul {
    list-style-type: none;
    margin: 0;
    padding: 0; }
  footer nav li {
    float: left;
    padding: 0.3em 0.6em;
    color: white;
    font-family: arial; }

form {
  width: 100%; }

#search input[type="text"] {
  border-radius: 0.5ex 0 0 0.5ex;
  border: 0;
  margin: 0;
  -moz-box-shadow: inset -5px -5px 5px 5px #aaa;
  -webkit-box-shadow: inset -5px -5px 5px 5px #aaa;
  box-shadow: inset 0.5ex 0.5ex 0.25ex 0ex #aaa;
  float: left;
  padding: 10px; }

#search input[type="submit"] {
  border-radius: 0 0.5ex 0.5ex 0;
  background-color: #AD1E1E;
  color: white;
  border: 0;
  float: left;
  padding: 10px; }

main aside {
  float: left;
  display: block;
  margin-right: 2.35765%;
  width: 31.76157%;
  margin-left: 8.5298%; }
  main aside:last-child {
    margin-right: 0; }

/*html {*/
/*background-color: #F6F6F7;*/
/*}*/
body {
  background-color: white;
  box-shadow: 0 0 10px rgba(76, 76, 76, 0.7); }

body main {
  max-width: 960px;
  margin-left: auto;
  margin-right: auto;
  margin-top: 1px; }
  body main:after {
    clear: both;
    content: "";
    display: table; }

#ads img {
  float: left;
  display: block;
  margin-right: 2.35765%;
  width: 31.76157%; }
  #ads img:last-child {
    margin-right: 0; }

#news {
  float: left;
  display: block;
  margin-right: 2.35765%;
  width: 100%; }
  #news:last-child {
    margin-right: 0; }
  #news ul {
    list-style: none;
    padding: 0; }
  #news li {
    float: left;
    display: block;
    margin-right: 2.35765%;
    width: 31.76157%;
    margin-top: 30px; }
    #news li:last-child {
      margin-right: 0; }
  #news li:nth-child(3n) {
    margin-right: 0; }
  #news article {
    position: relative;
    max-height: 400px;
    overflow: hidden;
    text-overflow: ellipsis; }
    #news article img {
      width: 100%; }
  #news header {
    height: 200px; }
  #news section:after {
    content: "";
    height: 200px;
    width: 100%;
    position: absolute;
    left: 0;
    bottom: 0;
    background: linear-gradient(transparent 50%, white); }
  #news a {
    color: black; }

.news {
  float: left;
  display: block;
  margin-right: 2.35765%;
  width: 100%; }
  .news:last-child {
    margin-right: 0; }
  .news ul {
    list-style: none;
    padding: 0; }
  .news li {
    float: left;
    display: block;
    margin-right: 2.35765%;
    width: 31.76157%;
    margin-top: 30px; }
    .news li:last-child {
      margin-right: 0; }
  .news li:nth-child(3n) {
    margin-right: 0; }
  .news article {
    position: relative;
    max-height: 400px;
    overflow: hidden;
    text-overflow: ellipsis; }
    .news article img {
      width: 100%; }
  .news header {
    height: 200px; }
  .news section:after {
    content: "";
    height: 200px;
    width: 100%;
    position: absolute;
    left: 0;
    bottom: 0;
    background: linear-gradient(transparent 50%, white); }
  .news a {
    color: black; }

.browserupgrade {
  margin: 0.2em 0;
  background: #ccc;
  color: #000;
  padding: 0.2em 0; }

ol > li {
  background-color: F4F5F7;
  background-image: -webkit-linear-gradient( right , #FFF, #F4F5F7);
  background-image: linear-gradient(to left, #FFF, #F4F5F7);
  float: left;
  font-family: "Lucida Grande", "Tahoma", "Verdana", "Arial", sans-serif;
  position: relative;
  -webkit-transition: all 0.8s;
  -moz-transition: all 0.8s;
  transition: all 0.8s; }
  ol > li:after {
    content: " ";
    height: 23px;
    position: absolute;
    top: 10px;
    right: -13px;
    bottom: 0;
    left: 0;
    -webkit-transform: rotate(45deg) skew(20deg, 30deg);
    -moz-transform: rotate(45deg) skew(20deg, 30deg);
    -ms-transform: rotate(45deg) skew(20deg, 30deg);
    -o-transform: rotate(45deg) skew(20deg, 30deg);
    transform: rotate(45deg) skew(20deg, 30deg);
    width: 23px; }

.parent {
  -webkit-box-align: stretch;
  -moz-box-align: stretch;
  box-align: stretch;
  -webkit-align-items: stretch;
  -moz-align-items: stretch;
  -ms-align-items: stretch;
  -o-align-items: stretch;
  align-items: stretch;
  -ms-flex-align: stretch;
  display: -webkit-box;
  display: -moz-box;
  display: box;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -moz-box-orient: horizontal;
  box-orient: horizontal;
  -webkit-box-direction: normal;
  -moz-box-direction: normal;
  box-direction: normal;
  -webkit-flex-direction: row;
  -moz-flex-direction: row;
  flex-direction: row;
  -ms-flex-direction: row;
  -webkit-box-pack: start;
  -moz-box-pack: start;
  box-pack: start;
  -webkit-justify-content: flex-start;
  -moz-justify-content: flex-start;
  -ms-justify-content: flex-start;
  -o-justify-content: flex-start;
  justify-content: flex-start;
  -ms-flex-pack: start; }

.parent > .child {
  -webkit-box-flex: 1;
  -moz-box-flex: 1;
  box-flex: 1;
  -webkit-flex: 1;
  -moz-flex: 1;
  -ms-flex: 1;
  flex: 1; }

#main-news article {
  font-family: Adelle, Georgia, serif;
  padding: 10px;
  font-size: 20px;
  position: relative;
  float: left;
  display: block;
  margin-right: 2.35765%;
  width: 48.82117%;
  margin-right: 0;
  width: 50%;
  height: 270px;
  /* 16:9 ratio */
  background: linear-gradient(135deg, rgba(65, 119, 17, 0.7), rgba(220, 66, 37, 0.7));
  color: white; }
  #main-news article:last-child {
    margin-right: 0; }
  #main-news article header {
    position: absolute;
    top: 0; }
  #main-news article section {
    position: absolute;
    bottom: 0; }
  #main-news article img {
    z-index: -1;
    left: 0;
    top: 0;
    position: absolute;
    /*margin: auto;*/
    height: 100%;
    /*max-height: 100%;*/
    width: 100%;
    /*max-width: 100%;*/ }

#shows {
  float: left;
  display: block;
  margin-right: 2.35765%;
  width: 74.41059%; }
  #shows:last-child {
    margin-right: 0; }
  #shows ul {
    list-style: none;
    padding: 0; }
  #shows li {
    float: left;
    display: block;
    margin-right: 3.16844%;
    width: 31.22104%;
    margin-top: 30px; }
    #shows li:last-child {
      margin-right: 0; }
  #shows li:nth-child(3n) {
    margin-right: 0; }
  #shows article {
    position: relative;
    max-height: 400px;
    overflow: hidden;
    text-overflow: ellipsis; }
    #shows article img {
      width: 100%; }
  #shows header {
    height: 200px; }
  #shows section:after {
    content: "";
    height: 200px;
    width: 100%;
    position: absolute;
    left: 0;
    bottom: 0;
    background: linear-gradient(transparent 50%, white); }
  #shows a {
    color: black; }

#shows {
  margin: 0;
  padding: 0; }

#shows ul {
  list-style: none;
  margin: 0;
  padding: 0;
  text-align: center; }

#shows li {
  overflow: hidden;
  margin-right: 10px;
  margin-top: 0;
  margin-bottom: 10px;
  padding: 0; }

#shows li h3 {
  border-radius: 0px 0px 5px 5px;
  margin: 0;
  text-align: center;
  height: 15%; }

#mejibo {
  background-color: #CD20BE; }

#santa-rocksalia {
  background-color: #F9A433; }

#titulares-sport {
  background-color: #78C82C;
  font-size: 1em; }

#sonico-jardin {
  background-color: #389BC9;
  font-size: 0.8em; }

#sonando-diario {
  background-color: #BC3017; }

#ustream {
  float: left;
  display: block;
  margin-right: 2.35765%;
  width: 23.23176%; }
  #ustream:last-child {
    margin-right: 0; }

.old-news .views-field-title, #shows .text-container {
  background: #251e1c;
  background: rgba(37, 30, 28, 0.9);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=rgba(229, 37, 30, 0.1098), endColorstr=rgba(229, 37, 30, 0.1098));
  -ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorstr=rgba(229, 37, 30, 0.1098), endColorstr=rgba(229, 37, 30, 0.1098))"; }

.ie6-8 .old-news .views-field-title, .ie6-8 #shows .text-container {
  background: transparent; }

.ie6 .old-news .views-field-field-image {
  float: left; }

#shows .outer-container {
  border-radius: 5px;
  border: 1px solid black;
  box-shadow: 0px 10px 10px #ccc; }

#shows .container {
  text-align: center;
  position: relative; }

#shows .text-container {
  position: absolute;
  bottom: 0;
  left: 0;
  color: white;
  width: 100%;
  font-size: 1em; }

#shows .field-content {
  -webkit-font-smoothing: antialiased;
  border-collapse: collapse;
  color: white;
  display: block;
  font-family: 'Trebuchet MS', 'Helvetica Neue', Arial, Helvetica, sans-serif;
  font-size: 13.008px;
  font-weight: bold;
  line-height: 19.512px;
  text-align: center;
  zoom: 1; }

#shows p {
  /*margin-top: 0em;*/
  /*margin-bottom: 0em;*/
  -webkit-font-smoothing: antialiased;
  border-collapse: collapse;
  color: white;
  display: block;
  font-family: 'Trebuchet MS', 'Helvetica Neue', Arial, Helvetica, sans-serif;
  font-size: 13.008px;
  height: 19px;
  line-height: 19.512px;
  margin-bottom: 0px;
  margin-top: 0px;
  padding-bottom: 0px;
  padding-left: 0px;
  padding-right: 0px;
  padding-top: 0px;
  text-align: center;
  width: 161px;
  zoom: 1; }

#shows .views-field-field-schedule {
  font-weight: bold; }

#shows .views-field-field-days {
  font-weight: bold; }

#shows img {
  display: block; }

#shows .views-field-title, #shows .views-field-title a {
  text-align: center;
  font-size: 1.2em;
  color: black;
  text-shadow: rgba(255, 255, 255, 0.9) 0px 3px 3px;
  font-weight: bolder;
  text-decoration: none;
  -webkit-font-smoothing: antialiased;
  border-collapse: collapse;
  color: black;
  display: block;
  font-family: 'Trebuchet MS', 'Helvetica Neue', Arial, Helvetica, sans-serif;
  font-size: 15.6096px;
  font-weight: bold;
  height: 23.4062px;
  line-height: 23.4144px;
  text-align: center;
  text-decoration: none;
  text-shadow: rgba(255, 255, 255, 0.901961) 0px 3px 3px;
  zoom: 1; }

#shows .views-field-title {
  height: 1.5em; }

#sonando-diario {
  background-color: #BE3117; }

#santa-rocksalia {
  background-color: #F9A433; }

#sound-garden {
  background-color: #389BCA;
  font-size: 0.9em; }

#titulares-sport {
  background-color: #78C82C;
  font-size: 1.1em; }

#mejibo {
  background-color: #CE21BF; }

#sidebar {
  float: left;
  display: block;
  margin-right: 2.35765%;
  width: 23.23176%; }
  #sidebar:last-child {
    margin-right: 0; }

body {
  font: 16px/26px Helvetica, Helvetica Neue, Arial; }
/*# sourceMappingURL=data:application/json;base64, */